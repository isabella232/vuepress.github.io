import{e as l,k as i,l as c,M as a,K as s,N as p,O as d,p as n,P as o}from"./vendor.469fd836.js";import{_ as D}from"./plugin-vue_export-helper.21dcd24c.js";const u={},h=s("h1",{id:"container",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#container","aria-hidden":"true"},"#"),n(" container")],-1),y=s("p",null,"Register markdown custom containers in your VuePress site.",-1),f=n("This plugin simplifies the use of "),b={href:"https://github.com/markdown-it/markdown-it-container",target:"_blank",rel:"noopener noreferrer"},_=n("markdown-it-container"),m=n(", but also retains its original capabilities."),C=n("The "),g=n("Custom Containers"),E=n(" of default theme is powered by this plugin."),k=o(`<h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">npm i -D @vuepress/plugin-container@next</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="container-syntax" tabindex="-1"><a class="header-anchor" href="#container-syntax" aria-hidden="true">#</a> Container Syntax</h2><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">::: &lt;type&gt; </span><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">info</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">content</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">:::</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>The <code>type</code> is required and should be specified via <a href="#type">type</a> option.</li><li>The <code>info</code> is optional, and the default value can be specified via <code>defaultInfo</code> in <a href="#locales">locales</a> option.</li><li>The <code>content</code> can be any valid markdown content.</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>This plugin can be used multiple times to support different types of containers.</p></div><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h3>`,8),v=s("li",null,[s("p",null,[n("Type: "),s("code",null,"string")])],-1),x=s("p",null,"Details:",-1),w=s("p",null,"The type of the container.",-1),T=n("It will be used as the "),B=s("code",null,"name",-1),F=n(" param of "),I={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},N=n("markdown-it-container"),R=n("."),q=o(`<h3 id="locales" tabindex="-1"><a class="header-anchor" href="#locales" aria-hidden="true">#</a> locales</h3><ul><li><p>Type: <code>Record&lt;string, { defaultInfo: string }&gt;</code></p></li><li><p>Details:</p><p>The default <code>info</code> of the container in different locales.</p><p>If this option is not specified, the default <code>info</code> will fallback to the uppercase of the <a href="#type">type</a> option.</p></li><li><p>Example:</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">plugins:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#CE9178;">&#39;@vuepress/container&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">type:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;tip&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">locales:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#CE9178;">&#39;/&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">defaultInfo:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;TIP&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">          },</span></span>
<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#CE9178;">&#39;/zh/&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">defaultInfo:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;\u63D0\u793A&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">          },</span></span>
<span class="line"><span style="color:#D4D4D4;">        },</span></span>
<span class="line"><span style="color:#D4D4D4;">      },</span></span>
<span class="line"><span style="color:#D4D4D4;">    ],</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,3),A=n("Also see: "),V=n("Guide > I18n"),j=o(`<h3 id="before" tabindex="-1"><a class="header-anchor" href="#before" aria-hidden="true">#</a> before</h3><ul><li><p>Type: <code>(info: string) =&gt; string</code></p></li><li><p>Default:</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">info</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">): </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">\`&lt;div class=&quot;custom-container </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">type</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;&gt;</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">info</span><span style="color:#D4D4D4;"> ? </span><span style="color:#CE9178;">\`&lt;p class=&quot;custom-container-title&quot;&gt;</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">info</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&lt;/p&gt;\`</span><span style="color:#D4D4D4;"> : </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#569CD6;">}</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">\`</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li><p>Details:</p><p>A function to render the starting tag of the container.</p><p>The first param is the <code>info</code> part of <a href="#container-syntax">container syntax</a>.</p><p>This option will not take effect if you don&#39;t specify the <a href="#after">after</a> option.</p></li></ul><h3 id="after" tabindex="-1"><a class="header-anchor" href="#after" aria-hidden="true">#</a> after</h3><ul><li><p>Type: <code>(info: string) =&gt; string</code></p></li><li><p>Default:</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">(): </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;&lt;/div&gt;</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><p>Details:</p><p>A function to render the ending tag of the container.</p><p>The first param is the <code>info</code> part of <a href="#container-syntax">container syntax</a>.</p><p>This option will not take effect if you don&#39;t specify the <a href="#before">before</a> option.</p></li></ul><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render" aria-hidden="true">#</a> render</h3><ul><li>Type:</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">MarkdownItContainerRenderFunction</span><span style="color:#D4D4D4;"> = (</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">tokens</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Token</span><span style="color:#D4D4D4;">[],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">number</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">any</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">env</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">MarkdownEnv</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Renderer</span></span>
<span class="line"><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,11),L=s("p",null,"Details:",-1),P=n("The "),M=s("code",null,"render",-1),$=n(" option of "),O={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},S=n("markdown-it-container"),z=n("."),G=s("p",null,[n("This plugin uses a default "),s("code",null,"render"),n(" function. If you specify this option, the default "),s("code",null,"render"),n(" function will be replaced, and the "),s("a",{href:"#locales"},"locales"),n(", "),s("a",{href:"#before"},"before"),n(" and "),s("a",{href:"#after"},"after"),n(" options will be ignored.")],-1),K=s("h3",{id:"validate",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#validate","aria-hidden":"true"},"#"),n(" validate")],-1),H=s("li",null,[s("p",null,[n("Type: "),s("code",null,"(params: string) => boolean")])],-1),J=s("p",null,"Details:",-1),Q=n("The "),U=s("code",null,"validate",-1),W=n(" option of "),X={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},Y=n("markdown-it-container"),Z=n("."),ss=s("h3",{id:"marker",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#marker","aria-hidden":"true"},"#"),n(" marker")],-1),ns=s("li",null,[s("p",null,[n("Type: "),s("code",null,"string")])],-1),as=s("p",null,"Details:",-1),es=n("The "),ls=s("code",null,"marker",-1),os=n(" option of "),ts={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},ps=n("markdown-it-container"),rs=n(".");function is(cs,ds){const r=l("NpmBadge"),e=l("ExternalLinkIcon"),t=l("RouterLink");return i(),c(d,null,[h,a(r,{package:"@vuepress/plugin-container"}),y,s("p",null,[f,s("a",b,[_,a(e)]),m]),s("p",null,[C,a(t,{to:"/reference/default-theme/markdown.html#custom-containers"},{default:p(()=>[g]),_:1}),E]),k,s("ul",null,[v,s("li",null,[x,w,s("p",null,[T,B,F,s("a",I,[N,a(e)]),R])])]),q,s("ul",null,[s("li",null,[A,s("ul",null,[s("li",null,[a(t,{to:"/guide/i18n.html"},{default:p(()=>[V]),_:1})])])])]),j,s("ul",null,[s("li",null,[L,s("p",null,[P,M,$,s("a",O,[S,a(e)]),z]),G])]),K,s("ul",null,[H,s("li",null,[J,s("p",null,[Q,U,W,s("a",X,[Y,a(e)]),Z])])]),ss,s("ul",null,[ns,s("li",null,[as,s("p",null,[es,ls,os,s("a",ts,[ps,a(e)]),rs])])])],64)}var hs=D(u,[["render",is]]);export{hs as default};
