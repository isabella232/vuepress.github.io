import{e as t,k as r,l as p,K as s,M as n,N as o,O as i,P as l,p as e}from"./vendor.469fd836.js";import{_ as c}from"./hero.a10ab56e.js";import{_ as d}from"./plugin-vue_export-helper.21dcd24c.js";const u={},D=l(`<h1 id="assets" tabindex="-1"><a class="header-anchor" href="#assets" aria-hidden="true">#</a> Assets</h1><h2 id="relative-urls" tabindex="-1"><a class="header-anchor" href="#relative-urls" aria-hidden="true">#</a> Relative URLs</h2><p>You can reference any assets using relative URLs in your Markdown content:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">![</span><span style="color:#CE9178;">An image</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">(</span><span style="color:#D4D4D4;text-decoration:underline;">./image.png</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>This is generally the suggested way to import images, as users usually place images near the Markdown file that references them.</p><h2 id="public-files" tabindex="-1"><a class="header-anchor" href="#public-files" aria-hidden="true">#</a> Public Files</h2><p>You can put some static assets inside public directory, and they will be copied to the root of the generated directory.</p><p>The default public directory is <code>.vuepress/public</code>, which can be changed in config.</p><p>It would be useful in some cases:</p><ul><li>You may need to provide static assets that are not directly referenced in any of your Markdown files, for example, favicon and PWA icons.</li><li>You may need to serve some shared static assets, which may even be referenced outside your site, for example, logo images.</li><li>You may want to reference images using absolute URLs in your Markdown content.</li></ul><p>Take our documentation source files as an example, we are putting the logo of VuePress inside the public directory:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">\u2514\u2500 docs</span></span>
<span class="line"><span style="color:#D4D4D4;">   \u251C\u2500 .vuepress</span></span>
<span class="line"><span style="color:#D4D4D4;">   |  \u2514\u2500 public</span></span>
<span class="line"><span style="color:#D4D4D4;">   |     \u2514\u2500 images</span></span>
<span class="line"><span style="color:#D4D4D4;">   |        \u2514\u2500 hero.png  </span><span style="color:#6A9955;"># &lt;- Logo file</span></span>
<span class="line"><span style="color:#D4D4D4;">   \u2514\u2500 guide</span></span>
<span class="line"><span style="color:#D4D4D4;">      \u2514\u2500 assets.md       </span><span style="color:#6A9955;"># &lt;- Here we are</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>We can reference our logo in current page like this:</p><p><strong>Input</strong></p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">![</span><span style="color:#CE9178;">VuePress Logo</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">(</span><span style="color:#D4D4D4;text-decoration:underline;">/images/hero.png</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>Output</strong></p><p><img src="`+c+'" alt="VuePress Logo"></p>',17),h={class:"custom-container tip"},m=s("p",{class:"custom-container-title"},"TIP",-1),b=e("Config reference: "),y=e("public"),g=s("h3",{id:"base-helper",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#base-helper","aria-hidden":"true"},"#"),e(" Base Helper")],-1),f=e("If your site is deployed to a non-root URL, i.e. the "),_=e("base"),v=e(" is not "),k=s("code",null,'"/"',-1),E=e(", you will need to prepend the "),x=s("code",null,"base",-1),w=e(" to the absolute URLs of your public files."),C=l(`<p>For example, if you plan to deploy your site to <code>https://foo.github.io/bar/</code>, then <code>base</code> should be set to <code>&quot;/bar/&quot;</code>, and you have to reference your public files in Markdown like this:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">![</span><span style="color:#CE9178;">VuePress Logo</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">(</span><span style="color:#D4D4D4;text-decoration:underline;">/bar/images/hero.png</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Obviously, it is brittle if you ever decide to change the <code>base</code>. This is the reason why we suggest to reference static assets using relative URLs.</p><p>To help with that, VuePress provides a built-in helper <code>$withBase</code> that generates the correct path:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">&lt;img :src=&quot;$withBase(&#39;/images/hero.png&#39;)&quot; alt=&quot;VuePress Logo&quot;&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>The helper is verbose in Markdown. So it might be more helpful for theme and plugin authors.</p>`,6),P={class:"custom-container tip"},L=s("p",{class:"custom-container-title"},"TIP",-1),T=e("Config reference: "),V=e("base"),A=l(`<h2 id="packages-and-path-aliases" tabindex="-1"><a class="header-anchor" href="#packages-and-path-aliases" aria-hidden="true">#</a> Packages and Path Aliases</h2><p>Although it is not a common usage, you can reference images from dependent packages:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">npm install -D package-name</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">![</span><span style="color:#CE9178;">Image from dependency</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">(</span><span style="color:#D4D4D4;text-decoration:underline;">package-name/image.png</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>The path aliases that set in config file are also supported:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">alias:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&#39;@alias&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">__dirname</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;./path/to/some/dir&#39;</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">![</span><span style="color:#CE9178;">Image from path alias</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">(</span><span style="color:#D4D4D4;text-decoration:underline;">@alias/image.png</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>`,7),R={class:"custom-container tip"},B=s("p",{class:"custom-container-title"},"TIP",-1),I=e("Config reference: "),F=e("alias");function M(q,U){const a=t("RouterLink");return r(),p(i,null,[D,s("div",h,[m,s("p",null,[b,n(a,{to:"/reference/config.html#public"},{default:o(()=>[y]),_:1})])]),g,s("p",null,[f,n(a,{to:"/reference/config.html#base"},{default:o(()=>[_]),_:1}),v,k,E,x,w]),C,s("div",P,[L,s("p",null,[T,n(a,{to:"/reference/config.html#base"},{default:o(()=>[V]),_:1})])]),A,s("div",R,[B,s("p",null,[I,n(a,{to:"/reference/config.html#alias"},{default:o(()=>[F]),_:1})])])],64)}var O=d(u,[["render",M]]);export{O as default};
