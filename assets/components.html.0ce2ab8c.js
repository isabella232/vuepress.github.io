import{e as o,k as i,l as r,M as s,K as e,N as c,O as d,p as n,P as p}from"./vendor.469fd836.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const h={},m=e("h1",{id:"built-in-components",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#built-in-components","aria-hidden":"true"},"#"),n(" Built-in Components")],-1),_=p(`<h2 id="clientonly" tabindex="-1"><a class="header-anchor" href="#clientonly" aria-hidden="true">#</a> ClientOnly</h2><ul><li>Usage:</li></ul><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">&lt;ClientOnly&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  &lt;NonSsrFriendlyComponent /&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">&lt;/ClientOnly&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li><p>Details:</p><p>This component and its children will only be rendered in client-side. That means, it will not be rendered to HTML during build (SSR).</p><p>If a component is trying to access Browser / DOM APIs directly in <code>setup()</code>, an error will occur during build because those APIs are unavailable in Node.js environment. In such case, you could do either:</p><ul><li>Modify the component to only access Browser / DOM APIs in <code>onBeforeMount()</code> or <code>onMounted()</code> hook.</li><li>Wrap the component with <code>&lt;ClientOnly&gt;</code>.</li></ul></li></ul><h2 id="content" tabindex="-1"><a class="header-anchor" href="#content" aria-hidden="true">#</a> Content</h2><ul><li><p>Props:</p><ul><li>pageKey <ul><li>Type: <code>string</code></li><li>Required: <code>false</code></li></ul></li></ul></li><li><p>Usage:</p></li></ul><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">&lt;Content page-key=&quot;v-xxxxxx&quot; /&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>`,7),g=e("p",null,"Details:",-1),y=e("p",null,"This component will render the Markdown content of a page.",-1),b=n("The page key is the "),f={href:"https://next.router.vuejs.org/api/#name-2",target:"_blank",rel:"noopener noreferrer"},k=n("name"),x=n(" of the page route. If the "),v=e("code",null,"pageKey",-1),D=n(" prop is not provided, it will render the page of current route."),w=e("p",null,"This component is mainly for developing themes. You won't need it in most cases.",-1),C=e("p",null,"Also see:",-1),N=n("Node API > Page Properties > key");function B(E,I){const l=o("NpmBadge"),t=o("ExternalLinkIcon"),a=o("RouterLink");return i(),r(d,null,[m,s(l,{package:"@vuepress/client"}),_,e("ul",null,[e("li",null,[g,y,e("p",null,[b,e("a",f,[k,s(t)]),x,v,D]),w]),e("li",null,[C,e("ul",null,[e("li",null,[s(a,{to:"/reference/node-api.html#key"},{default:c(()=>[N]),_:1})])])])])],64)}var T=u(h,[["render",B]]);export{T as default};
